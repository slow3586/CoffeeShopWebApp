/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/telegram": {
    /** POST api/telegram */
    post: operations["process"];
  };
  "/api/order/create": {
    /** POST api/order/create */
    post: operations["create"];
  };
  "/api/order/complete": {
    /** POST api/order/complete */
    post: operations["orderComplete"];
  };
  "/api/order/all": {
    /** GET api/order/all */
    get: operations["all"];
  };
  "/api/order/query": {
    /** GET api/order/query */
    get: operations["query"];
  };
  "/api/promo/create": {
    /** POST api/promo/create */
    post: operations["create"];
  };
  "/api/promo/query": {
    /** GET api/promo/query */
    get: operations["query"];
  };
  "/api/payment/receive": {
    /** POST api/payment/receive */
    post: operations["updateCheckFromPaymentSystem"];
  };
  "/api/product/all": {
    /** GET api/product/all */
    get: operations["all"];
  };
  "/api/product/query": {
    /** GET api/product/query */
    get: operations["query"];
  };
  "/api/product/type/query": {
    /** GET api/product/type/query */
    get: operations["queryType"];
  };
  "/api/product/inventory/query": {
    /** GET api/product/inventory/query */
    get: operations["queryInventory"];
  };
  "/api/product/inventory/type/query": {
    /** GET api/product/inventory/type/query */
    get: operations["queryInventoryType"];
  };
  "/api/shop/all": {
    /** GET api/shop/all */
    get: operations["all"];
  };
  "/api/shop/query": {
    /** GET api/shop/query */
    get: operations["query"];
  };
  "/api/shop/inventory/query": {
    /** GET api/shop/inventory/query */
    get: operations["queryInventory"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    TelegramProcessRequest: {
      customerId?: string;
      text?: string;
      name?: string;
      phone?: string;
    };
    TelegramProcessResponse: {
      sendImageBytes?: string[];
      sendImageName?: string;
      sendText?: string;
      sendTextKeyboard?: unknown[][];
      tags?: string[];
    };
    OrderRequestItem: {
      /** Format: uuid */
      productId?: string;
      /** Format: int32 */
      quantity?: number;
    };
    OrderRequest: {
      /** Format: uuid */
      customerId?: string;
      /** Format: uuid */
      shopId?: string;
      usePoints?: boolean;
      productQuantityList?: components["schemas"]["OrderRequestItem"];
    };
    Instant: Record<string, never>;
    CustomerOrderItem: {
      /** Format: uuid */
      id?: string;
      /** Format: uuid */
      orderId?: string;
      /** Format: uuid */
      productId?: string;
      /** Format: int32 */
      quantity?: number;
    };
    CustomerOrder: {
      /** Format: uuid */
      id?: string;
      /** Format: uuid */
      customerId?: string;
      /** Format: uuid */
      shopId?: string;
      status?: string;
      createdAt?: components["schemas"]["Instant"];
      paidAt?: components["schemas"]["Instant"];
      completedAt?: components["schemas"]["Instant"];
      customerOrderItemList?: components["schemas"]["CustomerOrderItem"];
    };
    PromoRequest: {
      code?: string;
      name?: string;
      text?: string;
      productTypeId?: string;
      image?: string[];
      startsAt?: components["schemas"]["Instant"];
      endsAt?: components["schemas"]["Instant"];
    };
    Promo: {
      /** Format: uuid */
      id?: string;
      code?: string;
      name?: string;
      text?: string;
      image?: string[];
      productTypeId?: string;
      queuedForTelegram?: boolean;
      startsAt?: components["schemas"]["Instant"];
      endsAt?: components["schemas"]["Instant"];
    };
    ProductInventoryType: {
      /** Format: uuid */
      id?: string;
      name?: string;
    };
    ProductInventory: {
      /** Format: uuid */
      id?: string;
      /** Format: uuid */
      productId?: string;
      /** Format: uuid */
      productInventoryTypeId?: string;
      /** Format: int32 */
      quantity?: number;
      productInventoryType?: components["schemas"]["ProductInventoryType"];
    };
    Product: {
      /** Format: uuid */
      id?: string;
      /** Format: uuid */
      productTypeId?: string;
      label?: string;
      /** Format: int32 */
      price?: number;
      productInventoryList?: components["schemas"]["ProductInventory"];
    };
    ProductType: {
      /** Format: uuid */
      id?: string;
      name?: string;
      color?: string;
      productList?: components["schemas"]["Product"];
    };
    ShopInventory: {
      /** Format: uuid */
      id?: string;
      /** Format: uuid */
      productInventoryTypeId?: string;
      /** Format: uuid */
      shopId?: string;
      /** Format: int32 */
      quantity?: number;
      /** Format: int32 */
      reserved?: number;
    };
    Shop: {
      /** Format: uuid */
      id?: string;
      name?: string;
      location?: string;
      status?: string;
      shopInventoryList?: components["schemas"]["ShopInventory"];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** POST api/telegram */
  process: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["TelegramProcessRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["TelegramProcessResponse"];
        };
      };
    };
  };
  /** POST api/promo/create */
  create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["PromoRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": string;
        };
      };
    };
  };
  /** POST api/order/complete */
  orderComplete: {
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /** GET api/shop/all */
  all: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["Shop"];
        };
      };
    };
  };
  /** GET api/shop/query */
  query: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["Shop"];
        };
      };
    };
  };
  /** POST api/payment/receive */
  updateCheckFromPaymentSystem: {
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /** GET api/product/type/query */
  queryType: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ProductType"];
        };
      };
    };
  };
  /** GET api/shop/inventory/query */
  queryInventory: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ShopInventory"];
        };
      };
    };
  };
  /** GET api/product/inventory/type/query */
  queryInventoryType: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ProductInventoryType"];
        };
      };
    };
  };
}
